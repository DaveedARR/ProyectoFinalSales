// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sales.Infrastructure.Context;

#nullable disable

namespace Sales.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250118004325_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sales.Domain.Entities.Caja", b =>
                {
                    b.Property<int>("IDCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDCaja"));

                    b.Property<string>("EstadoCaja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("MontoFinal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontoInicial")
                        .HasColumnType("numeric");

                    b.HasKey("IDCaja");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("Sales.Domain.Entities.CajaDetalle", b =>
                {
                    b.Property<int>("IdCajaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCajaDetalle"));

                    b.Property<decimal?>("CantidadGasto")
                        .IsRequired()
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CantidadIngreso")
                        .IsRequired()
                        .HasColumnType("numeric");

                    b.Property<string>("DetalleMovimiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCaja")
                        .HasColumnType("integer");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCajaDetalle");

                    b.HasIndex("IdCaja");

                    b.ToTable("CajaDetalles");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Factura", b =>
                {
                    b.Property<int>("IDFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDFactura"));

                    b.Property<string>("EstadoFactura")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdVenta")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroFactura")
                        .HasColumnType("integer");

                    b.HasKey("IDFactura");

                    b.HasIndex("IdVenta");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Venta", b =>
                {
                    b.Property<int>("IDVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDVenta"));

                    b.Property<string>("EstadoVenta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalVenta")
                        .HasColumnType("numeric");

                    b.HasKey("IDVenta");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Sales.Domain.Entities.CajaDetalle", b =>
                {
                    b.HasOne("Sales.Domain.Entities.Caja", "Caja")
                        .WithMany("CajaDetalles")
                        .HasForeignKey("IdCaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Factura", b =>
                {
                    b.HasOne("Sales.Domain.Entities.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Caja", b =>
                {
                    b.Navigation("CajaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
